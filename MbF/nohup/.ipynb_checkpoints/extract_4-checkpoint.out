loading data for sub 4
4 done
[[-3.79968900e+02  3.99616713e+14]
 [-3.79947900e+02  4.85651155e+14]
 [-3.59941900e+02  4.85651155e+14]
 [-3.51958500e+02  4.85651155e+14]
 [-3.45092300e+02  4.85651155e+14]
 [-3.45067100e+02  3.99616713e+14]
 [-3.15075200e+02  6.32206786e+14]
 [-3.15040500e+02  4.85651155e+14]
 [-3.15015100e+02  3.99616713e+14]
 [-3.06100300e+02  3.99616713e+14]
 [-3.05103400e+02  3.99616713e+14]
 [-3.00220900e+02  6.32206786e+14]
 [-3.00204200e+02  4.85651155e+14]
 [-2.98078700e+02  6.32206786e+14]
 [-2.96130500e+02  6.32206786e+14]
 [-2.96105800e+02  4.85651155e+14]
 [-2.96081200e+02  3.99616713e+14]
 [-2.95107000e+02  4.85651155e+14]
 [-2.88124900e+02  6.32206786e+14]
 [-2.88108400e+02  4.85651155e+14]
 [-2.77147100e+02  3.99616713e+14]
 [-2.68313600e+02  6.32206786e+14]
 [-2.68297300e+02  4.85651155e+14]
 [-2.68156900e+02  4.85651155e+14]
 [-2.50334300e+02  3.99616713e+14]
 [-2.44377000e+02  3.99616713e+14]
 [-2.43257000e+02  3.99616713e+14]
 [-2.41360400e+02  4.85651155e+14]
 [-2.37302600e+02  6.32206786e+14]
 [-2.37271100e+02  4.85651155e+14]
 [-2.14377300e+02  3.99616713e+14]
 [-2.11346600e+02  4.85651155e+14]
 [-2.11330000e+02  3.99616713e+14]
 [-2.09317100e+02  4.85651155e+14]
 [-2.09300300e+02  3.99616713e+14]
 [-1.79730000e+01  4.85651155e+14]
 [-1.30670000e+01  3.99616713e+14]
 [ 0.00000000e+00  6.32206786e+14]
 [ 1.77000000e-02  4.85651155e+14]
 [ 4.97190000e+00  4.85651155e+14]
 [ 4.98950000e+00  3.99616713e+14]
 [ 1.48522000e+01  3.99616713e+14]
 [ 2.09917000e+01  3.99616713e+14]
 [ 5.58056000e+01  6.32206786e+14]
 [ 5.58310000e+01  4.85651155e+14]
 [ 5.58569000e+01  3.99616713e+14]
 [ 5.87980000e+01  6.32206786e+14]
 [ 5.88200000e+01  4.85651155e+14]
 [ 6.28523000e+01  6.32206786e+14]
 [ 6.28970000e+01  4.85651155e+14]
 [ 6.29142000e+01  3.99616713e+14]
 [ 7.07430000e+01  3.99616713e+14]
 [ 7.88418000e+01  3.99616713e+14]
 [ 8.07846000e+01  4.85651155e+14]
 [ 8.08053000e+01  3.99616713e+14]
 [ 8.37379000e+01  6.32206786e+14]
 [ 8.57179000e+01  4.85651155e+14]
 [ 8.57762000e+01  3.99616713e+14]
 [ 9.18335000e+01  4.85651155e+14]
 [ 9.18584000e+01  3.99616713e+14]
 [ 9.47388000e+01  3.99616713e+14]
 [ 1.06730300e+02  3.99616713e+14]
 [ 1.20672400e+02  6.32206786e+14]
 [ 1.20689700e+02  4.85651155e+14]
 [ 1.33618800e+02  3.99616713e+14]
 [ 1.34644000e+02  3.99616713e+14]
 [ 1.44627900e+02  4.85651155e+14]
 [ 1.47687200e+02  4.85651155e+14]
 [ 1.47705200e+02  3.99616713e+14]
 [ 1.57677400e+02  3.99616713e+14]]
  FLUXCAL  
-----------
  -1.464429
-0.13266544
 -0.6085727
 -2.0486674
  -2.288019
   0.695422
0.008037935
  0.4308656
 -0.6462617
 -1.6277055
  0.5839585
-0.15143885
 -0.9761312
-0.19321382
 0.19701526
  1.6568208
-0.13059476
 -1.0255256
  0.6976738
 -1.4425174
   2.013389
 0.32326818
-0.86422616
  0.8811738
  -3.454704
-0.26714906
        ...
  0.7935238
 -0.7554398
0.109230414
 -0.6045722
-0.18250273
 0.24261655
  0.5364381
  1.7916862
   5.165267
  3.3911743
 0.39881918
-0.58780956
-0.67279327
 -0.3115263
 -0.9735097
  0.2197586
  3.2047615
 -1.7720711
 0.57271415
  0.6399246
 -1.7875084
   7.446186
  4.0028734
  0.7223808
  1.2243298
  1.0610821
  2.1350627
Length = 70 rows
FLUXCALERR
----------
 1.4171289
 1.1020136
0.78357625
  1.597586
  1.018756
 1.1196855
0.60053986
0.78975314
  1.505148
  2.946447
 2.2087374
 0.6211247
0.91666406
 0.4908038
0.76503605
 1.0560647
 2.9964592
 0.9620795
0.61887443
 1.0726246
 4.8536973
0.73247516
0.95189494
 1.0642536
 4.3089557
 1.5396758
       ...
 0.9809267
 1.0830075
 1.8011895
0.44400504
 1.0091463
 0.7544799
  1.056998
 1.6614417
 4.1308737
  2.868649
 1.0532603
  1.061822
 1.0230607
 1.0508763
 1.2912364
 0.6864302
 2.2855637
 2.6361632
 2.6259916
0.81507117
 1.0065793
    4.5358
 4.1970463
 0.9556052
 1.0317602
 1.5286995
 4.8683133
Length = 70 rows
<function Fnu at 0x7f4562ff4c80>
Traceback (most recent call last):
  File "feature_extraction.py", line 44, in <module>
    f_extract(sub_data, name, split)
  File "/media3/etienne/workdir/spark_AGN/ELAsTiCC/Multiple_band_fit/MbF/data_processing.py", line 378, in extract_mbf
    extraction = perform_fit_mbf(obj)
  File "/media3/etienne/workdir/spark_AGN/ELAsTiCC/Multiple_band_fit/MbF/data_processing.py", line 294, in perform_fit_mbf
    least_squares = LeastSquares(np.array([global_mjd, global_nu]).T, global_flux, global_fluxerr, Fnu)
  File "/media3/etienne/science_module_env/lib/python3.6/site-packages/iminuit/cost.py", line 930, in __init__
    data = np.column_stack(np.broadcast_arrays(*x, y, yerror))
  File "<__array_function__ internals>", line 6, in broadcast_arrays
  File "/media3/etienne/science_module_env/lib/python3.6/site-packages/numpy/lib/stride_tricks.py", line 258, in broadcast_arrays
    shape = _broadcast_shape(*args)
  File "/media3/etienne/science_module_env/lib/python3.6/site-packages/numpy/lib/stride_tricks.py", line 196, in _broadcast_shape
    b = np.broadcast(b, *args[pos:(pos + 31)])
ValueError: shape mismatch: objects cannot be broadcast to a single shape
